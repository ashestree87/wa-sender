name: CI/CD Pipeline

on:
  push:
    branches: 
      - main
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'

    # Add SSH known hosts
    - name: Add Known Hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
        echo "ForwardAgent yes" >> ~/.ssh/config

    # Cache dependencies
    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: |
          node_modules
          client/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Dependencies
      run: |
        npm ci
        cd client && npm ci
        cd ..

    - name: Build Client
      run: |
        cd client
        npm run build
        cd ..

    # Uncomment if you have tests
    # - name: Run Tests
    #   run: |
    #     npm test
    #     cd client && npm test
    #     cd ..

    - name: Deploy to cPanel
      uses: appleboy/ssh-action@master
      env:
        DEPLOY_PATH: /home/${{ secrets.VPS_USERNAME }}/whatsapp-camp
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        envs: DEPLOY_PATH
        script: |
          # Load NVM
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          
          # If NVM isn't installed, install it
          if [ ! -d "$NVM_DIR" ]; then
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          fi
          
          # Install Node.js 16 if not already installed
          nvm install 16
          nvm use 16
          
          # Install PM2 locally if not exists
          if [ ! -f "$HOME/node_modules/.bin/pm2" ]; then
            npm install pm2 --prefix=$HOME
          fi
          
          # Navigate to project directory
          cd $DEPLOY_PATH
          
          # Pull latest changes
          git pull origin main
          
          # Install dependencies
          npm ci
          cd client && npm ci && npm run build
          cd ..
          
          # Start/Restart the application using local PM2
          $HOME/node_modules/.bin/pm2 restart whatsapp-campaign || $HOME/node_modules/.bin/pm2 start server/index.js --name whatsapp-campaign 